////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : My2To4Decoder.vf
// /___/   /\     Timestamp : 03/04/2024 10:04:41
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3a -verilog "C:/Users/User/Desktop/1lab MKC/Decoder/My2To4Decoder.vf" -w "C:/Users/User/Desktop/1lab MKC/Decoder/My2To4Decoder.sch"
//Design Name: My2To4Decoder
//Device: spartan3a
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module My2To4Decoder(IN_0, 
                     IN_1, 
                     IN_2, 
                     IN_3, 
                     OUT_0, 
                     OUT_1, 
                     OUT_2, 
                     OUT_3, 
                     OUT_4, 
                     OUT_5);

    input IN_0;
    input IN_1;
    input IN_2;
    input IN_3;
   output OUT_0;
   output OUT_1;
   output OUT_2;
   output OUT_3;
   output OUT_4;
   output OUT_5;
   
   wire XLXN_97;
   wire XLXN_99;
   wire XLXN_116;
   wire XLXN_117;
   wire XLXN_132;
   wire XLXN_133;
   wire XLXN_135;
   wire XLXN_136;
   
   AND4B4  XLXI_43 (.I0(IN_0), 
                   .I1(IN_1), 
                   .I2(IN_2), 
                   .I3(IN_3), 
                   .O(XLXN_97));
   AND4  XLXI_44 (.I0(IN_0), 
                 .I1(IN_1), 
                 .I2(IN_2), 
                 .I3(IN_3), 
                 .O(XLXN_99));
   OR2  XLXI_45 (.I0(XLXN_99), 
                .I1(XLXN_97), 
                .O(OUT_3));
   AND3  XLXI_46 (.I0(IN_0), 
                 .I1(IN_1), 
                 .I2(IN_3), 
                 .O(XLXN_117));
   AND4B3  XLXI_48 (.I0(IN_0), 
                   .I1(IN_2), 
                   .I2(IN_3), 
                   .I3(IN_1), 
                   .O(XLXN_116));
   OR2  XLXI_49 (.I0(XLXN_116), 
                .I1(XLXN_117), 
                .O(OUT_4));
   OR3B1  XLXI_51 (.I0(IN_3), 
                  .I1(IN_1), 
                  .I2(IN_2), 
                  .O(OUT_5));
   AND3B3  XLXI_52 (.I0(IN_1), 
                   .I1(IN_2), 
                   .I2(IN_3), 
                   .O(XLXN_132));
   AND3B2  XLXI_53 (.I0(IN_1), 
                   .I1(IN_3), 
                   .I2(IN_0), 
                   .O(XLXN_133));
   AND3B1  XLXI_54 (.I0(IN_2), 
                   .I1(IN_1), 
                   .I2(IN_3), 
                   .O(XLXN_135));
   AND4B2  XLXI_55 (.I0(IN_0), 
                   .I1(IN_1), 
                   .I2(IN_2), 
                   .I3(IN_3), 
                   .O(XLXN_136));
   OR4  XLXI_56 (.I0(XLXN_136), 
                .I1(XLXN_135), 
                .I2(XLXN_133), 
                .I3(XLXN_132), 
                .O(OUT_0));
   BUF  XLXI_57 (.I(IN_3), 
                .O(OUT_1));
   AND4B3  XLXI_58 (.I0(IN_3), 
                   .I1(IN_2), 
                   .I2(IN_1), 
                   .I3(IN_0), 
                   .O(OUT_2));
endmodule
